{"version":3,"sources":["Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","changeHandler","setState","mode","document","getElementById","value","languageCode","changeHandlerTheme","theme","clickHandler","a","outputText","innerHTML","fetch","method","headers","accept","body","JSON","stringify","source_code","state","output","stdin","input","language_id","response","json","jsonResponse","jsonGetSolution","status","description","stderr","compile_output","console","log","token","url","getSolution","stdout","atob","time","memory","error","compilation_error","onChangeACE","e","outputfinal","bind","this","onChange","id","className","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71133984.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport AceEditor from 'react-ace'\nimport 'brace/mode/javascript'\nimport 'brace/mode/python'\nimport 'brace/theme/monokai'\nimport 'brace/theme/textmate'\nimport 'brace/theme/twilight'\nexport class Editor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             mode:'python',\n             theme:'monokai',\n             output:'',\n             input:'',\n             languageCode:71,\n             outputfinal:''\n        }\n        this.clickHandler = this.clickHandler.bind(this)\n    } \n    componentDidUpdate(){\n        console.log(this.state)\n    }\n    changeHandler=()=>{\n        // alert(\"change detected\")\n        this.setState({\n            mode:document.getElementById(\"mySelect\").value\n        })\n        if(document.getElementById(\"mySelect\").value===\"python\"){\n            this.setState({\n                languageCode:71\n\n            })\n            \n        }\n        if(document.getElementById(\"mySelect\").value===\"javascript\"){\n            this.setState({\n                languageCode:63\n\n            })\n\n        }\n    }\n    changeHandlerTheme=()=>{\n        this.setState({\n            theme:document.getElementById(\"mySelectTheme\").value\n        })\n    } \n    clickHandler= async ()=>{\n        let outputText = document.getElementById(\"output\");\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += \"Creating Submission ...\\n\";\n        const response = await fetch(\n            \"https://judge0-ce.p.rapidapi.com/submissions\",\n            {\n              method: \"POST\",\n              headers: {\n                \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"0289fd5497msh6e1c7b0ddc2d92bp17e800jsn601d197dbee7\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\n                \"content-type\": \"application/json\",\n                accept: \"application/json\",\n              },\n              body: JSON.stringify({\n                source_code: this.state.output,\n                stdin: this.state.input,\n                language_id: this.state.languageCode,\n              }),\n            }\n          );\n          outputText.innerHTML += \"Submission Created ...\\n\";\n          const jsonResponse = await response.json();\n          let jsonGetSolution = {\n            status: { description: \"Queue\" },\n            stderr: null,\n            compile_output: null,\n          };\n          console.log(jsonResponse)\n        //   Token part \n        while (\n            jsonGetSolution.status.description !== \"Accepted\" &&\n            jsonGetSolution.stderr == null &&\n            jsonGetSolution.compile_output == null\n          ) {\n             outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n           \n            if (jsonResponse.token) {\n              let url = `https://judge0-ce.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n      \n              const getSolution = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                  \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                  \"x-rapidapi-key\": \"0289fd5497msh6e1c7b0ddc2d92bp17e800jsn601d197dbee7\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\n                  \"content-type\": \"application/json\",\n                },\n              });\n      \n              jsonGetSolution = await getSolution.json();\n            }\n            \n          }\n          console.log(jsonGetSolution)\n          if(jsonGetSolution.stdout){\n          const output = atob(jsonGetSolution.stdout);\n          outputText.innerHTML = \"\";\n          outputText.innerHTML += `Results : <br />  ${output} <br/> Execution Time : ${jsonGetSolution.time}  Secs <br/>Memory used : ${jsonGetSolution.memory} bytes`;\n          console.log(output)\n        }\n         else if (jsonGetSolution.stderr) {\n            const error = atob(jsonGetSolution.stderr);\n            outputText.innerHTML = \"\";\n\n            outputText.innerHTML += `\\n Error :${error}`;\n\n        }\n        else {\n            const compilation_error = atob(jsonGetSolution.compile_output);\n      \n            outputText.innerHTML = \"\";\n      \n            outputText.innerHTML += `\\n Error :${compilation_error}`;\n          }\n\n        \n    }\n    onChangeACE=(e)=>{\n       this.setState({\n        output:e\n    })\n   \n    }\n    render() {\n        return (\n            <div>\n            <select onChange={this.changeHandler} id=\"mySelect\">\n                <option>python</option>\n                <option>javascript</option>\n            </select>\n            <select onChange={this.changeHandlerTheme} id=\"mySelectTheme\">\n                <option>monokai</option>\n                <option>textmate</option>\n                <option>twilight</option>\n            </select>\n            <AceEditor onChange={this.onChangeACE} mode={this.state.mode} theme={this.state.theme} className=\"wrapper\" />\n            <button onClick={this.clickHandler} className=\"runbutton\">Run</button>\n            <div  className=\"output\"><h3>OUTPUT :</h3> <h4 id=\"output\"> </h4>  </div>\n            </div>\n        )\n    }\n}\n\nexport default Editor\n","import './App.css';\nimport Editor from './Editor'; \nfunction App() {\n  return (\n    <div className=\"App\">\n    <Editor />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}